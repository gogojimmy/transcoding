worker_processes auto;

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;

events {
    worker_connections 1024;
    use epoll;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application app {
            live on;
            record off;
            allow publish all;
            allow play all;

            # Direct output for HD (original stream)
            push rtmp://localhost:1935/app/${name}_hd;

            # Transcoding with FFmpeg using NVENC for sd and ld
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name 
                -c:v h264_nvenc -preset p1 -tune zerolatency -b:v 2M -maxrate 2M -bufsize 400k -s 1280x720 -r 30 -g 1 -keyint_min 1 
                -c:a aac -b:a 128k -ar 44100 
                -f flv -flvflags no_duration_filesize rtmp://localhost:1935/$app/${name}_sd;

            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name 
                -c:v h264_nvenc -preset p1 -tune zerolatency -b:v 1M -maxrate 1M -bufsize 200k -s 854x480 -r 30 -g 1 -keyint_min 1 
                -c:a aac -b:a 96k -ar 44100 
                -f flv -flvflags no_duration_filesize rtmp://localhost:1935/$app/${name}_ld;
        }

        application app_hd {
            live on;
            record off;
            allow play all;
        }
    }
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Log format for RTMP
    log_format rtmp_log '$remote_addr [$time_local] $request_command "$app" "$name" "$args" '
                        '$bytes_received $bytes_sent "$pageurl" "$flashver" '
                        '$slotnum $streams';

    # RTMP access log
    access_log /var/log/nginx/rtmp_access.log rtmp_log;

    # HTTP error log
    error_log /var/log/nginx/error.log;

    server {
        listen 8080;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /usr/local/nginx/html;
        }

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
    }
}